dialog.use-custom-scrollbar #options::-webkit-scrollbar {
  width: calc(0.5rem + var(--small));
  height: var(--small);
}

dialog.use-custom-scrollbar #options::-webkit-scrollbar-thumb {
  background: var(--fg-mid);
  border: var(--fg-light-alpha) solid thin;
  border-radius: var(--medium);
}

dialog.use-custom-scrollbar #options::-webkit-scrollbar-track {
  background-color: inherit;
}

/* Turn on single button up on top, and down on bottom */
dialog.use-custom-scrollbar #options::-webkit-scrollbar-button:start:decrement,
dialog.use-custom-scrollbar #options::-webkit-scrollbar-button:end:increment {
  display: block;
  height: var(--medium);
}

p {
  margin: 0;
}

dialog {
  background: var(--bg-mid);
  color: var(--fg-mid);
  margin: auto;
  padding: var(--large);
  box-shadow: 0 var(--medium) var(--large) #171717;
  border-radius: var(--medium);
  border: none;

  width: 90vw;
  max-height: 90vh;

  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

dialog::backdrop {
  background: rgba(66, 66, 66, 0.5);
}

header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 2rem;

  position: sticky;
  top: 0;
}

header section {
  display: flex;
  align-items: center;
  gap: 1rem;
}

header section p {
  color: var(--fg-dark);
}

#custom-actions-container {
  display: flex;
  gap: 0.5rem;
  align-items: center;
  margin-right: 1rem;
}

.custom-action {
  cursor: pointer;
  transition: transform 0.2s;
}

.custom-action:hover:not(.disabled) {
  transform: scale(1.1);
}

.custom-action svg {
  display: block;
  width: 1.7rem;
  height: 1.7rem;
  fill: var(--fg-mid);
}

#custom-actions-container label>input {
  width: unset;
}

#custom-actions-container label>button {
  width: unset !important;
  margin: var(--small);
  padding: var(--medium)
}

main {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-between;

  overflow-y: auto;
  height: 100%;
}

#options,
#preview {
  display: flex;
  flex-direction: column;
  align-items: center;

  width: 100%;
  height: 100%;
}

#options {
  overflow-y: scroll;
  margin-top: auto;
  padding-right: 1rem;
}

#preview {
  overflow-y: hidden;
  align-items: center;
  justify-content: center;
  display: flex;
  height: auto;

}

#preview a {
  color: inherit;
  display: flex;
  align-items: center;
  background: var(--overlay-mid);
  border: solid transparent thin;
  border-radius: var(--tiny);
  justify-content: center;
  margin: var(--tiny);
  padding: var(--medium);
  min-height: 1.5rem;
  text-align: center;
  text-decoration: none;
  overflow: hidden;
  flex-grow: 1;
}

#preview>* {
  width: 80%;
}

label {
  width: 100%;
  display: flex;
  flex-direction: row;
  align-items: center;
}

label>* {
  width: 10rem;
  margin: var(--medium);
}

label>input {
  padding: var(--small) 0;
  flex-grow: 1;
  height: 2rem;
  background: var(--bg-light);
  color: var(--fg-dark);
  border: none;
  border-radius: var(--small);
  font-size: 1rem;
}

label>input[type="text"] {
  padding: var(--small) var(--medium);
}

label>input[type="checkbox"] {
  width: auto;
  flex-grow: 0.01;
}

color-switch,
better-text {
  flex-grow: 1;
}

.switch input {
  display: none;
}

.switch {
  display: grid;
  grid-template-columns: 1fr 1fr;
  flex-grow: 1;
  gap: 0.0625em;
}

.switch label {
  text-align: center;
  border: 0.0625em solid rgba(0, 0, 0, 0.2);

  padding: var(--small) 0;
  flex-grow: 1;
  height: 2rem;
  border-radius: var(--small);
  font-size: 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.switch input:checked+label {
  background-color: #d3d3d3;
  box-shadow: none;
  color: black;
}

button {
  padding: var(--large);
  margin: var(--large);
  background: var(--bg-dark);
  border-radius: var(--medium);
  width: 10rem;
  color: var(--fg-mid);
  font-size: 1rem;
}

button:hover {
  cursor: pointer;
  background: var(--bg-light);
}

footer {
  display: flex;
  flex-direction: row-reverse;

  position: sticky;
  bottom: 0;
}

/* Attributes */
.hidden {
  display: none;
}

*[disabled],
.disabled {
  opacity: 0.5;
  pointer-events: none;
  cursor: default;
}

@keyframes spin-animation {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.spin {
  animation: spin-animation 1s infinite linear;
}